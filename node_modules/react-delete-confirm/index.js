var React = require('react');

var Button = React.createClass({
  displayName: 'Button',

  render: function () {
    var buttonStyle = {
      textAlign: 'center',
      verticalAlign: 'middle',
      cursor: 'pointer',
      border: '1px solid transparent',
      backgroundColor: '#D9534F'
    };

    return React.createElement(
      'button',
      { style: this.props.buttonClass ? {} : buttonStyle,
        onClick: this.props.handleClick,
        className: this.props.buttonClass },
      this.props.label
    );
  }
});
var DeleteConfirm = React.createClass({
  displayName: "DeleteConfirm",

  getInitialState: function () {
    return { modalOpen: false };
  },

  toggleModal: function () {
    this.setState({ modalOpen: !this.state.modalOpen });
  },

  render: function () {
    return React.createElement(
      "div",
      null,
      this.renderDeleteButton(),
      this.state.modalOpen ? this.renderConfirmModal() : null
    );
  },

  renderDeleteButton: function () {
    return React.createElement(Button, { handleClick: this.toggleModal,
      buttonClass: this.props.buttonClass,
      label: "DELETE" });
  },

  renderConfirmModal: function () {
    return React.createElement(Modal, { deleteMethod: this.props.deleteMethod,
      modalClass: this.props.modalClass,
      buttonClass: this.props.buttonClass,
      name: this.props.name,
      handleClick: this.toggleModal });
  }
});
var Input = React.createClass({
  displayName: 'Input',

  render: function () {
    var styles = {
      inputStyle: {
        margin: 'auto'
      }
    };

    return React.createElement('input', { value: this.props.inputValue,
      onChange: this.props.handleChange,
      type: 'text',
      style: styles.inputStyle });
  }
});
var Modal = React.createClass({
  displayName: 'Modal',

  getInitialState: function () {
    return {
      inputValue: '',
      canDelete: false
    };
  },

  handleChange: function (event) {
    this.setState({ inputValue: event.target.value }, function () {
      this.setState({ canDelete: this.doNameAndInputMatch() });
    });
  },

  renderDeleteButton: function () {
    return React.createElement(Button, { handleClick: this.props.deleteMethod,
      buttonClass: this.props.buttonClass,
      label: "DELETE" });
  },

  doNameAndInputMatch: function () {
    return this.state.inputValue === this.props.name;
  },

  render: function () {
    var styles = {
      modalStyle: {
        position: 'fixed',
        top: '50%',
        left: '50%',
        transform: 'translate(-50%, -50%)',
        backgroundColor: '#C4C4C4',
        height: '250px',
        width: '500px',
        zIndex: '9999',
        border: '1px solid transparent',
        borderRadius: '5px',
        color: 'black'
      },
      spanStyle: {
        textAlign: 'center',
        fontSize: '14px',
        color: 'black'
      }
    };

    return React.createElement(
      'div',
      { style: this.props.modalClass ? {} : styles.modalStyle, className: this.props.modalClass },
      React.createElement(
        'span',
        null,
        'You\'ll have to type in the name ',
        React.createElement(
          'em',
          null,
          'exactly'
        ),
        ' if you want the delete button to appear!'
      ),
      React.createElement(
        'div',
        null,
        React.createElement(Input, { handleChange: this.handleChange })
      ),
      React.createElement(
        'div',
        null,
        React.createElement(Button, { handleClick: this.props.handleClick,
          buttonClass: this.props.buttonClass,
          label: "NEVERMIND!" }),
        this.state.canDelete ? this.renderDeleteButton() : null
      )
    );
  }
});
module.exports = React.createClass({
  displayName: 'exports',

  getInitialState: function () {
    return {
      customModalClass: '',
      customButtonClass: ''
    };
  },

  componentDidMount: function () {
    if (!this.props.deleteMethod) {
      console.warn("Warning from react-delete-confirm: Woops, looks like you forgot your deletion method.");
    }

    if (!this.props.name) {
      console.warn("Warning from react-delete-confirm: Woops, looks like you forgot to include the name of the object you want to delete.");
    }

    if (this.props.modalClassName) {
      this.setState({ customModalClass: this.props.modalClassName });
    }

    if (this.props.buttonClassName) {
      this.setState({ customButtonClass: this.props.buttonClassName });
    }
  },

  render: function () {
    return React.createElement(
      'div',
      null,
      React.createElement(DeleteConfirm, { name: this.props.name,
        modalClass: this.state.customModalClass,
        buttonClass: this.state.customButtonClass,
        deleteMethod: this.props.deleteMethod })
    );
  }
});
